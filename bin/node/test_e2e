#!/usr/bin/env bash

set -e
set -o errexit
set -o nounset

usage() {
  printf "Node Test e2e\n"

  printf "Usage: bin/node/test_e2e "
  printf -- "[-h] "
  printf -- "[-v] "
  printf -- "[-c] "
  printf -- "[-o] "
  printf -- "[-n=<start_point>] "
  printf -- "-e=<env> "
  printf "\n"

  printf "  -%s\t%s - %s%s\n" "h" "help" "Show this help message." ""
  printf "  -%s\t%s - %s%s\n" "v" "version" "Show version information." ""
  printf "  -%s\t%s - %s%s\n" "e" "env" "Environment" " (default: dev)"
  printf "  -%s\t%s - %s%s\n" "c" "ci" "Is CI execution" ""
  printf "  -%s\t%s - %s%s\n" "o" "container" "Is Container" ""
  printf "  -%s\t%s - %s%s\n" "n" "start_point" "File or Directory for start point tests" ""
}

version() {
  printf "0.0.1\n"
}

# default values
opt_help="false"
opt_version="false"
opt_ci="false"
opt_container="false"
opt_env="dev"
opt_start_point=""

# declared functions

# option parsing
OPTSPEC=:hve:con:
while getopts $OPTSPEC option; do
  case "$option" in
    h ) opt_help="true"; usage; exit 0  ;;
    v ) opt_version="true"; version; exit 0  ;;
    e ) opt_env=$OPTARG;  ;;
    c ) opt_ci="true";  ;;
    o ) opt_container="true";  ;;
    n ) opt_start_point=$OPTARG;  ;;
   \? ) echo "Unknown option: -$OPTARG" >&2; exit 1;;
    : ) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
    * ) echo "Unimplemented option: -$OPTARG" >&2; exit 1;;
  esac
done
shift $((OPTIND - 1))

# required option validation
if [ -z "$opt_env" ] ; then
  usage
  exit 1
fi

ARGS=""
if [ "$opt_container" == "true" ]; then
  ARGS=":container"
fi
if [ "$opt_ci" == "true" ]; then
  ARGS="$ARGS:ci"
fi
if [ "$opt_start_point" != "" ]; then
  ARGS="$ARGS $opt_start_point"
fi

/usr/local/bin/npm run test:e2e$ARGS